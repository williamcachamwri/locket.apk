package com.google.android.gms.internal.mlkit_vision_barcode;

import androidx.appcompat.app.AppCompatDelegate;
import androidx.core.location.LocationRequestCompat;
import androidx.media3.extractor.metadata.dvbsi.AppInfoTableDecoder;
import androidx.media3.extractor.ts.TsExtractor;
import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;
import okhttp3.internal.ws.WebSocketProtocol;

/* compiled from: com.google.android.gms:play-services-mlkit-barcode-scanning@@18.3.1 */
final class zzkv implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzkv zza = new zzkv();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzbd;
    private static final FieldDescriptor zzbe;
    private static final FieldDescriptor zzbf;
    private static final FieldDescriptor zzbg;
    private static final FieldDescriptor zzbh;
    private static final FieldDescriptor zzbi;
    private static final FieldDescriptor zzbj;
    private static final FieldDescriptor zzbk;
    private static final FieldDescriptor zzbl;
    private static final FieldDescriptor zzbm;
    private static final FieldDescriptor zzbn;
    private static final FieldDescriptor zzbo;
    private static final FieldDescriptor zzbp;
    private static final FieldDescriptor zzbq;
    private static final FieldDescriptor zzbr;
    private static final FieldDescriptor zzbs;
    private static final FieldDescriptor zzbt;
    private static final FieldDescriptor zzbu;
    private static final FieldDescriptor zzbv;
    private static final FieldDescriptor zzbw;
    private static final FieldDescriptor zzbx;
    private static final FieldDescriptor zzby;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzfa zzfa = new zzfa();
        zzfa.zza(1);
        zzb = builder.withProperty(zzfa.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzfa zzfa2 = new zzfa();
        zzfa2.zza(2);
        zzc = builder2.withProperty(zzfa2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzfa zzfa3 = new zzfa();
        zzfa3.zza(37);
        zzd = builder3.withProperty(zzfa3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzfa zzfa4 = new zzfa();
        zzfa4.zza(61);
        zze = builder4.withProperty(zzfa4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzfa zzfa5 = new zzfa();
        zzfa5.zza(3);
        zzf = builder5.withProperty(zzfa5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzfa zzfa6 = new zzfa();
        zzfa6.zza(20);
        zzg = builder6.withProperty(zzfa6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzfa zzfa7 = new zzfa();
        zzfa7.zza(4);
        zzh = builder7.withProperty(zzfa7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzfa zzfa8 = new zzfa();
        zzfa8.zza(29);
        zzi = builder8.withProperty(zzfa8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzfa zzfa9 = new zzfa();
        zzfa9.zza(5);
        zzj = builder9.withProperty(zzfa9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzfa zzfa10 = new zzfa();
        zzfa10.zza(59);
        zzk = builder10.withProperty(zzfa10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzfa zzfa11 = new zzfa();
        zzfa11.zza(6);
        zzl = builder11.withProperty(zzfa11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzfa zzfa12 = new zzfa();
        zzfa12.zza(79);
        zzm = builder12.withProperty(zzfa12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzfa zzfa13 = new zzfa();
        zzfa13.zza(7);
        zzn = builder13.withProperty(zzfa13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzfa zzfa14 = new zzfa();
        zzfa14.zza(58);
        zzo = builder14.withProperty(zzfa14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzfa zzfa15 = new zzfa();
        zzfa15.zza(48);
        zzp = builder15.withProperty(zzfa15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzfa zzfa16 = new zzfa();
        zzfa16.zza(49);
        zzq = builder16.withProperty(zzfa16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzfa zzfa17 = new zzfa();
        zzfa17.zza(18);
        zzr = builder17.withProperty(zzfa17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzfa zzfa18 = new zzfa();
        zzfa18.zza(26);
        zzs = builder18.withProperty(zzfa18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzfa zzfa19 = new zzfa();
        zzfa19.zza(27);
        zzt = builder19.withProperty(zzfa19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzfa zzfa20 = new zzfa();
        zzfa20.zza(28);
        zzu = builder20.withProperty(zzfa20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzfa zzfa21 = new zzfa();
        zzfa21.zza(44);
        zzv = builder21.withProperty(zzfa21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzfa zzfa22 = new zzfa();
        zzfa22.zza(45);
        zzw = builder22.withProperty(zzfa22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzfa zzfa23 = new zzfa();
        zzfa23.zza(19);
        zzx = builder23.withProperty(zzfa23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzfa zzfa24 = new zzfa();
        zzfa24.zza(21);
        zzy = builder24.withProperty(zzfa24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzfa zzfa25 = new zzfa();
        zzfa25.zza(22);
        zzz = builder25.withProperty(zzfa25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzfa zzfa26 = new zzfa();
        zzfa26.zza(8);
        zzA = builder26.withProperty(zzfa26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzfa zzfa27 = new zzfa();
        zzfa27.zza(9);
        zzB = builder27.withProperty(zzfa27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzfa zzfa28 = new zzfa();
        zzfa28.zza(10);
        zzC = builder28.withProperty(zzfa28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzfa zzfa29 = new zzfa();
        zzfa29.zza(11);
        zzD = builder29.withProperty(zzfa29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzfa zzfa30 = new zzfa();
        zzfa30.zza(12);
        zzE = builder30.withProperty(zzfa30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzfa zzfa31 = new zzfa();
        zzfa31.zza(13);
        zzF = builder31.withProperty(zzfa31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzfa zzfa32 = new zzfa();
        zzfa32.zza(14);
        zzG = builder32.withProperty(zzfa32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzfa zzfa33 = new zzfa();
        zzfa33.zza(15);
        zzH = builder33.withProperty(zzfa33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzfa zzfa34 = new zzfa();
        zzfa34.zza(16);
        zzI = builder34.withProperty(zzfa34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzfa zzfa35 = new zzfa();
        zzfa35.zza(17);
        zzJ = builder35.withProperty(zzfa35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzfa zzfa36 = new zzfa();
        zzfa36.zza(23);
        zzK = builder36.withProperty(zzfa36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzfa zzfa37 = new zzfa();
        zzfa37.zza(24);
        zzL = builder37.withProperty(zzfa37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzfa zzfa38 = new zzfa();
        zzfa38.zza(25);
        zzM = builder38.withProperty(zzfa38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzfa zzfa39 = new zzfa();
        zzfa39.zza(39);
        zzN = builder39.withProperty(zzfa39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzfa zzfa40 = new zzfa();
        zzfa40.zza(40);
        zzO = builder40.withProperty(zzfa40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzfa zzfa41 = new zzfa();
        zzfa41.zza(30);
        zzP = builder41.withProperty(zzfa41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzfa zzfa42 = new zzfa();
        zzfa42.zza(31);
        zzQ = builder42.withProperty(zzfa42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzfa zzfa43 = new zzfa();
        zzfa43.zza(32);
        zzR = builder43.withProperty(zzfa43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzfa zzfa44 = new zzfa();
        zzfa44.zza(33);
        zzS = builder44.withProperty(zzfa44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzfa zzfa45 = new zzfa();
        zzfa45.zza(34);
        zzT = builder45.withProperty(zzfa45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzfa zzfa46 = new zzfa();
        zzfa46.zza(35);
        zzU = builder46.withProperty(zzfa46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzfa zzfa47 = new zzfa();
        zzfa47.zza(36);
        zzV = builder47.withProperty(zzfa47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzfa zzfa48 = new zzfa();
        zzfa48.zza(46);
        zzW = builder48.withProperty(zzfa48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzfa zzfa49 = new zzfa();
        zzfa49.zza(47);
        zzX = builder49.withProperty(zzfa49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzfa zzfa50 = new zzfa();
        zzfa50.zza(69);
        zzY = builder50.withProperty(zzfa50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzfa zzfa51 = new zzfa();
        zzfa51.zza(42);
        zzZ = builder51.withProperty(zzfa51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzfa zzfa52 = new zzfa();
        zzfa52.zza(50);
        zzaa = builder52.withProperty(zzfa52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzfa zzfa53 = new zzfa();
        zzfa53.zza(51);
        zzab = builder53.withProperty(zzfa53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzfa zzfa54 = new zzfa();
        zzfa54.zza(52);
        zzac = builder54.withProperty(zzfa54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzfa zzfa55 = new zzfa();
        zzfa55.zza(53);
        zzad = builder55.withProperty(zzfa55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzfa zzfa56 = new zzfa();
        zzfa56.zza(54);
        zzae = builder56.withProperty(zzfa56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzfa zzfa57 = new zzfa();
        zzfa57.zza(60);
        zzaf = builder57.withProperty(zzfa57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzfa zzfa58 = new zzfa();
        zzfa58.zza(85);
        zzag = builder58.withProperty(zzfa58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzfa zzfa59 = new zzfa();
        zzfa59.zza(86);
        zzah = builder59.withProperty(zzfa59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzfa zzfa60 = new zzfa();
        zzfa60.zza(87);
        zzai = builder60.withProperty(zzfa60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzfa zzfa61 = new zzfa();
        zzfa61.zza(55);
        zzaj = builder61.withProperty(zzfa61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzfa zzfa62 = new zzfa();
        zzfa62.zza(56);
        zzak = builder62.withProperty(zzfa62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzfa zzfa63 = new zzfa();
        zzfa63.zza(57);
        zzal = builder63.withProperty(zzfa63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzfa zzfa64 = new zzfa();
        zzfa64.zza(62);
        zzam = builder64.withProperty(zzfa64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzfa zzfa65 = new zzfa();
        zzfa65.zza(63);
        zzan = builder65.withProperty(zzfa65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzfa zzfa66 = new zzfa();
        zzfa66.zza(64);
        zzao = builder66.withProperty(zzfa66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzfa zzfa67 = new zzfa();
        zzfa67.zza(65);
        zzap = builder67.withProperty(zzfa67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzfa zzfa68 = new zzfa();
        zzfa68.zza(66);
        zzaq = builder68.withProperty(zzfa68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzfa zzfa69 = new zzfa();
        zzfa69.zza(67);
        zzar = builder69.withProperty(zzfa69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzfa zzfa70 = new zzfa();
        zzfa70.zza(68);
        zzas = builder70.withProperty(zzfa70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzfa zzfa71 = new zzfa();
        zzfa71.zza(70);
        zzat = builder71.withProperty(zzfa71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzfa zzfa72 = new zzfa();
        zzfa72.zza(71);
        zzau = builder72.withProperty(zzfa72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzfa zzfa73 = new zzfa();
        zzfa73.zza(72);
        zzav = builder73.withProperty(zzfa73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzfa zzfa74 = new zzfa();
        zzfa74.zza(73);
        zzaw = builder74.withProperty(zzfa74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzfa zzfa75 = new zzfa();
        zzfa75.zza(74);
        zzax = builder75.withProperty(zzfa75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzfa zzfa76 = new zzfa();
        zzfa76.zza(75);
        zzay = builder76.withProperty(zzfa76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzfa zzfa77 = new zzfa();
        zzfa77.zza(76);
        zzaz = builder77.withProperty(zzfa77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzfa zzfa78 = new zzfa();
        zzfa78.zza(77);
        zzaA = builder78.withProperty(zzfa78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzfa zzfa79 = new zzfa();
        zzfa79.zza(78);
        zzaB = builder79.withProperty(zzfa79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzfa zzfa80 = new zzfa();
        zzfa80.zza(80);
        zzaC = builder80.withProperty(zzfa80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzfa zzfa81 = new zzfa();
        zzfa81.zza(81);
        zzaD = builder81.withProperty(zzfa81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzfa zzfa82 = new zzfa();
        zzfa82.zza(82);
        zzaE = builder82.withProperty(zzfa82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzfa zzfa83 = new zzfa();
        zzfa83.zza(83);
        zzaF = builder83.withProperty(zzfa83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzfa zzfa84 = new zzfa();
        zzfa84.zza(84);
        zzaG = builder84.withProperty(zzfa84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzfa zzfa85 = new zzfa();
        zzfa85.zza(88);
        zzaH = builder85.withProperty(zzfa85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzfa zzfa86 = new zzfa();
        zzfa86.zza(89);
        zzaI = builder86.withProperty(zzfa86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzfa zzfa87 = new zzfa();
        zzfa87.zza(90);
        zzaJ = builder87.withProperty(zzfa87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzfa zzfa88 = new zzfa();
        zzfa88.zza(91);
        zzaK = builder88.withProperty(zzfa88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzfa zzfa89 = new zzfa();
        zzfa89.zza(92);
        zzaL = builder89.withProperty(zzfa89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzfa zzfa90 = new zzfa();
        zzfa90.zza(93);
        zzaM = builder90.withProperty(zzfa90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzfa zzfa91 = new zzfa();
        zzfa91.zza(94);
        zzaN = builder91.withProperty(zzfa91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzfa zzfa92 = new zzfa();
        zzfa92.zza(95);
        zzaO = builder92.withProperty(zzfa92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzfa zzfa93 = new zzfa();
        zzfa93.zza(96);
        zzaP = builder93.withProperty(zzfa93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzfa zzfa94 = new zzfa();
        zzfa94.zza(97);
        zzaQ = builder94.withProperty(zzfa94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzfa zzfa95 = new zzfa();
        zzfa95.zza(98);
        zzaR = builder95.withProperty(zzfa95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzfa zzfa96 = new zzfa();
        zzfa96.zza(99);
        zzaS = builder96.withProperty(zzfa96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzfa zzfa97 = new zzfa();
        zzfa97.zza(100);
        zzaT = builder97.withProperty(zzfa97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzfa zzfa98 = new zzfa();
        zzfa98.zza(101);
        zzaU = builder98.withProperty(zzfa98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzfa zzfa99 = new zzfa();
        zzfa99.zza(102);
        zzaV = builder99.withProperty(zzfa99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzfa zzfa100 = new zzfa();
        zzfa100.zza(103);
        zzaW = builder100.withProperty(zzfa100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzfa zzfa101 = new zzfa();
        zzfa101.zza(LocationRequestCompat.QUALITY_LOW_POWER);
        zzaX = builder101.withProperty(zzfa101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzfa zzfa102 = new zzfa();
        zzfa102.zza(105);
        zzaY = builder102.withProperty(zzfa102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzfa zzfa103 = new zzfa();
        zzfa103.zza(106);
        zzaZ = builder103.withProperty(zzfa103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzfa zzfa104 = new zzfa();
        zzfa104.zza(107);
        zzba = builder104.withProperty(zzfa104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzfa zzfa105 = new zzfa();
        zzfa105.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR);
        zzbb = builder105.withProperty(zzfa105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzfa zzfa106 = new zzfa();
        zzfa106.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY);
        zzbc = builder106.withProperty(zzfa106.zzb()).build();
        FieldDescriptor.Builder builder107 = FieldDescriptor.builder("onDeviceStainRemovalLogEvent");
        zzfa zzfa107 = new zzfa();
        zzfa107.zza(110);
        zzbd = builder107.withProperty(zzfa107.zzb()).build();
        FieldDescriptor.Builder builder108 = FieldDescriptor.builder("aggregatedOnDeviceStainRemovalLogEvent");
        zzfa zzfa108 = new zzfa();
        zzfa108.zza(111);
        zzbe = builder108.withProperty(zzfa108.zzb()).build();
        FieldDescriptor.Builder builder109 = FieldDescriptor.builder("stainRemovalOptionalModuleLogEvent");
        zzfa zzfa109 = new zzfa();
        zzfa109.zza(112);
        zzbf = builder109.withProperty(zzfa109.zzb()).build();
        FieldDescriptor.Builder builder110 = FieldDescriptor.builder("onDeviceShadowRemovalLogEvent");
        zzfa zzfa110 = new zzfa();
        zzfa110.zza(113);
        zzbg = builder110.withProperty(zzfa110.zzb()).build();
        FieldDescriptor.Builder builder111 = FieldDescriptor.builder("aggregatedOnDeviceShadowRemovalLogEvent");
        zzfa zzfa111 = new zzfa();
        zzfa111.zza(114);
        zzbh = builder111.withProperty(zzfa111.zzb()).build();
        FieldDescriptor.Builder builder112 = FieldDescriptor.builder("shadowRemovalOptionalModuleLogEvent");
        zzfa zzfa112 = new zzfa();
        zzfa112.zza(115);
        zzbi = builder112.withProperty(zzfa112.zzb()).build();
        FieldDescriptor.Builder builder113 = FieldDescriptor.builder("onDeviceDigitalInkSegmentationLogEvent");
        zzfa zzfa113 = new zzfa();
        zzfa113.zza(AppInfoTableDecoder.APPLICATION_INFORMATION_TABLE_ID);
        zzbj = builder113.withProperty(zzfa113.zzb()).build();
        FieldDescriptor.Builder builder114 = FieldDescriptor.builder("onDeviceDocumentScannerStartLogEvent");
        zzfa zzfa114 = new zzfa();
        zzfa114.zza(117);
        zzbk = builder114.withProperty(zzfa114.zzb()).build();
        FieldDescriptor.Builder builder115 = FieldDescriptor.builder("onDeviceDocumentScannerFinishLogEvent");
        zzfa zzfa115 = new zzfa();
        zzfa115.zza(118);
        zzbl = builder115.withProperty(zzfa115.zzb()).build();
        FieldDescriptor.Builder builder116 = FieldDescriptor.builder("onDeviceDocumentScannerUiStartLogEvent");
        zzfa zzfa116 = new zzfa();
        zzfa116.zza(119);
        zzbm = builder116.withProperty(zzfa116.zzb()).build();
        FieldDescriptor.Builder builder117 = FieldDescriptor.builder("onDeviceDocumentScannerUiFinishLogEvent");
        zzfa zzfa117 = new zzfa();
        zzfa117.zza(120);
        zzbn = builder117.withProperty(zzfa117.zzb()).build();
        FieldDescriptor.Builder builder118 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionStartLogEvent");
        zzfa zzfa118 = new zzfa();
        zzfa118.zza(121);
        zzbo = builder118.withProperty(zzfa118.zzb()).build();
        FieldDescriptor.Builder builder119 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionFinishLogEvent");
        zzfa zzfa119 = new zzfa();
        zzfa119.zza(122);
        zzbp = builder119.withProperty(zzfa119.zzb()).build();
        FieldDescriptor.Builder builder120 = FieldDescriptor.builder("onDeviceDocumentScannerUiCreateLogEvent");
        zzfa zzfa120 = new zzfa();
        zzfa120.zza(123);
        zzbq = builder120.withProperty(zzfa120.zzb()).build();
        FieldDescriptor.Builder builder121 = FieldDescriptor.builder("onDeviceSubjectSegmentationCreateLogEvent");
        zzfa zzfa121 = new zzfa();
        zzfa121.zza(124);
        zzbr = builder121.withProperty(zzfa121.zzb()).build();
        FieldDescriptor.Builder builder122 = FieldDescriptor.builder("onDeviceSubjectSegmentationLoadLogEvent");
        zzfa zzfa122 = new zzfa();
        zzfa122.zza(125);
        zzbs = builder122.withProperty(zzfa122.zzb()).build();
        FieldDescriptor.Builder builder123 = FieldDescriptor.builder("onDeviceSubjectSegmentationInferenceLogEvent");
        zzfa zzfa123 = new zzfa();
        zzfa123.zza(WebSocketProtocol.PAYLOAD_SHORT);
        zzbt = builder123.withProperty(zzfa123.zzb()).build();
        FieldDescriptor.Builder builder124 = FieldDescriptor.builder("aggregatedOnDeviceSubjectSegmentationLogEvent");
        zzfa zzfa124 = new zzfa();
        zzfa124.zza(127);
        zzbu = builder124.withProperty(zzfa124.zzb()).build();
        FieldDescriptor.Builder builder125 = FieldDescriptor.builder("subjectSegmentationOptionalModuleLogEvent");
        zzfa zzfa125 = new zzfa();
        zzfa125.zza(128);
        zzbv = builder125.withProperty(zzfa125.zzb()).build();
        FieldDescriptor.Builder builder126 = FieldDescriptor.builder("documentScannerUiModuleScreenViewEvent");
        zzfa zzfa126 = new zzfa();
        zzfa126.zza(TsExtractor.TS_STREAM_TYPE_AC3);
        zzbw = builder126.withProperty(zzfa126.zzb()).build();
        FieldDescriptor.Builder builder127 = FieldDescriptor.builder("documentScannerUiModuleScreenClickEvent");
        zzfa zzfa127 = new zzfa();
        zzfa127.zza(TsExtractor.TS_STREAM_TYPE_HDMV_DTS);
        zzbx = builder127.withProperty(zzfa127.zzb()).build();
        FieldDescriptor.Builder builder128 = FieldDescriptor.builder("documentScannerUiModuleScreenErrorEvent");
        zzfa zzfa128 = new zzfa();
        zzfa128.zza(131);
        zzby = builder128.withProperty(zzfa128.zzb()).build();
    }

    private zzkv() {
    }

    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzrf zzrf = (zzrf) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, (Object) zzrf.zzg());
        objectEncoderContext.add(zzc, (Object) zzrf.zzc());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) zzrf.zzb());
        objectEncoderContext.add(zzf, (Object) null);
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) zzrf.zzd());
        objectEncoderContext.add(zzo, (Object) zzrf.zze());
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, (Object) null);
        objectEncoderContext.add(zzO, (Object) null);
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) zzrf.zza());
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
        objectEncoderContext.add(zzaz, (Object) null);
        objectEncoderContext.add(zzaA, (Object) null);
        objectEncoderContext.add(zzaB, (Object) null);
        objectEncoderContext.add(zzaC, (Object) null);
        objectEncoderContext.add(zzaD, (Object) null);
        objectEncoderContext.add(zzaE, (Object) null);
        objectEncoderContext.add(zzaF, (Object) null);
        objectEncoderContext.add(zzaG, (Object) null);
        objectEncoderContext.add(zzaH, (Object) null);
        objectEncoderContext.add(zzaI, (Object) null);
        objectEncoderContext.add(zzaJ, (Object) null);
        objectEncoderContext.add(zzaK, (Object) null);
        objectEncoderContext.add(zzaL, (Object) null);
        objectEncoderContext.add(zzaM, (Object) null);
        objectEncoderContext.add(zzaN, (Object) null);
        objectEncoderContext.add(zzaO, (Object) null);
        objectEncoderContext.add(zzaP, (Object) null);
        objectEncoderContext.add(zzaQ, (Object) null);
        objectEncoderContext.add(zzaR, (Object) null);
        objectEncoderContext.add(zzaS, (Object) null);
        objectEncoderContext.add(zzaT, (Object) null);
        objectEncoderContext.add(zzaU, (Object) null);
        objectEncoderContext.add(zzaV, (Object) null);
        objectEncoderContext.add(zzaW, (Object) null);
        objectEncoderContext.add(zzaX, (Object) null);
        objectEncoderContext.add(zzaY, (Object) null);
        objectEncoderContext.add(zzaZ, (Object) zzrf.zzf());
        objectEncoderContext.add(zzba, (Object) null);
        objectEncoderContext.add(zzbb, (Object) null);
        objectEncoderContext.add(zzbc, (Object) null);
        objectEncoderContext.add(zzbd, (Object) null);
        objectEncoderContext.add(zzbe, (Object) null);
        objectEncoderContext.add(zzbf, (Object) null);
        objectEncoderContext.add(zzbg, (Object) null);
        objectEncoderContext.add(zzbh, (Object) null);
        objectEncoderContext.add(zzbi, (Object) null);
        objectEncoderContext.add(zzbj, (Object) null);
        objectEncoderContext.add(zzbk, (Object) null);
        objectEncoderContext.add(zzbl, (Object) null);
        objectEncoderContext.add(zzbm, (Object) null);
        objectEncoderContext.add(zzbn, (Object) null);
        objectEncoderContext.add(zzbo, (Object) null);
        objectEncoderContext.add(zzbp, (Object) null);
        objectEncoderContext.add(zzbq, (Object) null);
        objectEncoderContext.add(zzbr, (Object) null);
        objectEncoderContext.add(zzbs, (Object) null);
        objectEncoderContext.add(zzbt, (Object) null);
        objectEncoderContext.add(zzbu, (Object) null);
        objectEncoderContext.add(zzbv, (Object) null);
        objectEncoderContext.add(zzbw, (Object) null);
        objectEncoderContext.add(zzbx, (Object) null);
        objectEncoderContext.add(zzby, (Object) null);
    }
}
