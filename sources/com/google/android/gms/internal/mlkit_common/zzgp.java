package com.google.android.gms.internal.mlkit_common;

import androidx.appcompat.app.AppCompatDelegate;
import androidx.core.location.LocationRequestCompat;
import androidx.media3.extractor.metadata.dvbsi.AppInfoTableDecoder;
import androidx.media3.extractor.ts.TsExtractor;
import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;
import okhttp3.internal.ws.WebSocketProtocol;

/* compiled from: com.google.mlkit:common@@18.11.0 */
final class zzgp implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzgp zza = new zzgp();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzbd;
    private static final FieldDescriptor zzbe;
    private static final FieldDescriptor zzbf;
    private static final FieldDescriptor zzbg;
    private static final FieldDescriptor zzbh;
    private static final FieldDescriptor zzbi;
    private static final FieldDescriptor zzbj;
    private static final FieldDescriptor zzbk;
    private static final FieldDescriptor zzbl;
    private static final FieldDescriptor zzbm;
    private static final FieldDescriptor zzbn;
    private static final FieldDescriptor zzbo;
    private static final FieldDescriptor zzbp;
    private static final FieldDescriptor zzbq;
    private static final FieldDescriptor zzbr;
    private static final FieldDescriptor zzbs;
    private static final FieldDescriptor zzbt;
    private static final FieldDescriptor zzbu;
    private static final FieldDescriptor zzbv;
    private static final FieldDescriptor zzbw;
    private static final FieldDescriptor zzbx;
    private static final FieldDescriptor zzby;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzay zzay2 = new zzay();
        zzay2.zza(1);
        zzb = builder.withProperty(zzay2.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzay zzay3 = new zzay();
        zzay3.zza(2);
        zzc = builder2.withProperty(zzay3.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzay zzay4 = new zzay();
        zzay4.zza(37);
        zzd = builder3.withProperty(zzay4.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzay zzay5 = new zzay();
        zzay5.zza(61);
        zze = builder4.withProperty(zzay5.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzay zzay6 = new zzay();
        zzay6.zza(3);
        zzf = builder5.withProperty(zzay6.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzay zzay7 = new zzay();
        zzay7.zza(20);
        zzg = builder6.withProperty(zzay7.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzay zzay8 = new zzay();
        zzay8.zza(4);
        zzh = builder7.withProperty(zzay8.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzay zzay9 = new zzay();
        zzay9.zza(29);
        zzi = builder8.withProperty(zzay9.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzay zzay10 = new zzay();
        zzay10.zza(5);
        zzj = builder9.withProperty(zzay10.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzay zzay11 = new zzay();
        zzay11.zza(59);
        zzk = builder10.withProperty(zzay11.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzay zzay12 = new zzay();
        zzay12.zza(6);
        zzl = builder11.withProperty(zzay12.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzay zzay13 = new zzay();
        zzay13.zza(79);
        zzm = builder12.withProperty(zzay13.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzay zzay14 = new zzay();
        zzay14.zza(7);
        zzn = builder13.withProperty(zzay14.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzay zzay15 = new zzay();
        zzay15.zza(58);
        zzo = builder14.withProperty(zzay15.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzay zzay16 = new zzay();
        zzay16.zza(48);
        zzp = builder15.withProperty(zzay16.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzay zzay17 = new zzay();
        zzay17.zza(49);
        zzq = builder16.withProperty(zzay17.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzay zzay18 = new zzay();
        zzay18.zza(18);
        zzr = builder17.withProperty(zzay18.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzay zzay19 = new zzay();
        zzay19.zza(26);
        zzs = builder18.withProperty(zzay19.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzay zzay20 = new zzay();
        zzay20.zza(27);
        zzt = builder19.withProperty(zzay20.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzay zzay21 = new zzay();
        zzay21.zza(28);
        zzu = builder20.withProperty(zzay21.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzay zzay22 = new zzay();
        zzay22.zza(44);
        zzv = builder21.withProperty(zzay22.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzay zzay23 = new zzay();
        zzay23.zza(45);
        zzw = builder22.withProperty(zzay23.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzay zzay24 = new zzay();
        zzay24.zza(19);
        zzx = builder23.withProperty(zzay24.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzay zzay25 = new zzay();
        zzay25.zza(21);
        zzy = builder24.withProperty(zzay25.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzay zzay26 = new zzay();
        zzay26.zza(22);
        zzz = builder25.withProperty(zzay26.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzay zzay27 = new zzay();
        zzay27.zza(8);
        zzA = builder26.withProperty(zzay27.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzay zzay28 = new zzay();
        zzay28.zza(9);
        zzB = builder27.withProperty(zzay28.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzay zzay29 = new zzay();
        zzay29.zza(10);
        zzC = builder28.withProperty(zzay29.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzay zzay30 = new zzay();
        zzay30.zza(11);
        zzD = builder29.withProperty(zzay30.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzay zzay31 = new zzay();
        zzay31.zza(12);
        zzE = builder30.withProperty(zzay31.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzay zzay32 = new zzay();
        zzay32.zza(13);
        zzF = builder31.withProperty(zzay32.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzay zzay33 = new zzay();
        zzay33.zza(14);
        zzG = builder32.withProperty(zzay33.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzay zzay34 = new zzay();
        zzay34.zza(15);
        zzH = builder33.withProperty(zzay34.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzay zzay35 = new zzay();
        zzay35.zza(16);
        zzI = builder34.withProperty(zzay35.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzay zzay36 = new zzay();
        zzay36.zza(17);
        zzJ = builder35.withProperty(zzay36.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzay zzay37 = new zzay();
        zzay37.zza(23);
        zzK = builder36.withProperty(zzay37.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzay zzay38 = new zzay();
        zzay38.zza(24);
        zzL = builder37.withProperty(zzay38.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzay zzay39 = new zzay();
        zzay39.zza(25);
        zzM = builder38.withProperty(zzay39.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzay zzay40 = new zzay();
        zzay40.zza(39);
        zzN = builder39.withProperty(zzay40.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzay zzay41 = new zzay();
        zzay41.zza(40);
        zzO = builder40.withProperty(zzay41.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzay zzay42 = new zzay();
        zzay42.zza(30);
        zzP = builder41.withProperty(zzay42.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzay zzay43 = new zzay();
        zzay43.zza(31);
        zzQ = builder42.withProperty(zzay43.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzay zzay44 = new zzay();
        zzay44.zza(32);
        zzR = builder43.withProperty(zzay44.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzay zzay45 = new zzay();
        zzay45.zza(33);
        zzS = builder44.withProperty(zzay45.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzay zzay46 = new zzay();
        zzay46.zza(34);
        zzT = builder45.withProperty(zzay46.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzay zzay47 = new zzay();
        zzay47.zza(35);
        zzU = builder46.withProperty(zzay47.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzay zzay48 = new zzay();
        zzay48.zza(36);
        zzV = builder47.withProperty(zzay48.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzay zzay49 = new zzay();
        zzay49.zza(46);
        zzW = builder48.withProperty(zzay49.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzay zzay50 = new zzay();
        zzay50.zza(47);
        zzX = builder49.withProperty(zzay50.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzay zzay51 = new zzay();
        zzay51.zza(69);
        zzY = builder50.withProperty(zzay51.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzay zzay52 = new zzay();
        zzay52.zza(42);
        zzZ = builder51.withProperty(zzay52.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzay zzay53 = new zzay();
        zzay53.zza(50);
        zzaa = builder52.withProperty(zzay53.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzay zzay54 = new zzay();
        zzay54.zza(51);
        zzab = builder53.withProperty(zzay54.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzay zzay55 = new zzay();
        zzay55.zza(52);
        zzac = builder54.withProperty(zzay55.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzay zzay56 = new zzay();
        zzay56.zza(53);
        zzad = builder55.withProperty(zzay56.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzay zzay57 = new zzay();
        zzay57.zza(54);
        zzae = builder56.withProperty(zzay57.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzay zzay58 = new zzay();
        zzay58.zza(60);
        zzaf = builder57.withProperty(zzay58.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzay zzay59 = new zzay();
        zzay59.zza(85);
        zzag = builder58.withProperty(zzay59.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzay zzay60 = new zzay();
        zzay60.zza(86);
        zzah = builder59.withProperty(zzay60.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzay zzay61 = new zzay();
        zzay61.zza(87);
        zzai = builder60.withProperty(zzay61.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzay zzay62 = new zzay();
        zzay62.zza(55);
        zzaj = builder61.withProperty(zzay62.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzay zzay63 = new zzay();
        zzay63.zza(56);
        zzak = builder62.withProperty(zzay63.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzay zzay64 = new zzay();
        zzay64.zza(57);
        zzal = builder63.withProperty(zzay64.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzay zzay65 = new zzay();
        zzay65.zza(62);
        zzam = builder64.withProperty(zzay65.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzay zzay66 = new zzay();
        zzay66.zza(63);
        zzan = builder65.withProperty(zzay66.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzay zzay67 = new zzay();
        zzay67.zza(64);
        zzao = builder66.withProperty(zzay67.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzay zzay68 = new zzay();
        zzay68.zza(65);
        zzap = builder67.withProperty(zzay68.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzay zzay69 = new zzay();
        zzay69.zza(66);
        zzaq = builder68.withProperty(zzay69.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzay zzay70 = new zzay();
        zzay70.zza(67);
        zzar = builder69.withProperty(zzay70.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzay zzay71 = new zzay();
        zzay71.zza(68);
        zzas = builder70.withProperty(zzay71.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzay zzay72 = new zzay();
        zzay72.zza(70);
        zzat = builder71.withProperty(zzay72.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzay zzay73 = new zzay();
        zzay73.zza(71);
        zzau = builder72.withProperty(zzay73.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzay zzay74 = new zzay();
        zzay74.zza(72);
        zzav = builder73.withProperty(zzay74.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzay zzay75 = new zzay();
        zzay75.zza(73);
        zzaw = builder74.withProperty(zzay75.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzay zzay76 = new zzay();
        zzay76.zza(74);
        zzax = builder75.withProperty(zzay76.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzay zzay77 = new zzay();
        zzay77.zza(75);
        zzay = builder76.withProperty(zzay77.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzay zzay78 = new zzay();
        zzay78.zza(76);
        zzaz = builder77.withProperty(zzay78.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzay zzay79 = new zzay();
        zzay79.zza(77);
        zzaA = builder78.withProperty(zzay79.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzay zzay80 = new zzay();
        zzay80.zza(78);
        zzaB = builder79.withProperty(zzay80.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzay zzay81 = new zzay();
        zzay81.zza(80);
        zzaC = builder80.withProperty(zzay81.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzay zzay82 = new zzay();
        zzay82.zza(81);
        zzaD = builder81.withProperty(zzay82.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzay zzay83 = new zzay();
        zzay83.zza(82);
        zzaE = builder82.withProperty(zzay83.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzay zzay84 = new zzay();
        zzay84.zza(83);
        zzaF = builder83.withProperty(zzay84.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzay zzay85 = new zzay();
        zzay85.zza(84);
        zzaG = builder84.withProperty(zzay85.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzay zzay86 = new zzay();
        zzay86.zza(88);
        zzaH = builder85.withProperty(zzay86.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzay zzay87 = new zzay();
        zzay87.zza(89);
        zzaI = builder86.withProperty(zzay87.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzay zzay88 = new zzay();
        zzay88.zza(90);
        zzaJ = builder87.withProperty(zzay88.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzay zzay89 = new zzay();
        zzay89.zza(91);
        zzaK = builder88.withProperty(zzay89.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzay zzay90 = new zzay();
        zzay90.zza(92);
        zzaL = builder89.withProperty(zzay90.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzay zzay91 = new zzay();
        zzay91.zza(93);
        zzaM = builder90.withProperty(zzay91.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzay zzay92 = new zzay();
        zzay92.zza(94);
        zzaN = builder91.withProperty(zzay92.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzay zzay93 = new zzay();
        zzay93.zza(95);
        zzaO = builder92.withProperty(zzay93.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzay zzay94 = new zzay();
        zzay94.zza(96);
        zzaP = builder93.withProperty(zzay94.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzay zzay95 = new zzay();
        zzay95.zza(97);
        zzaQ = builder94.withProperty(zzay95.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzay zzay96 = new zzay();
        zzay96.zza(98);
        zzaR = builder95.withProperty(zzay96.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzay zzay97 = new zzay();
        zzay97.zza(99);
        zzaS = builder96.withProperty(zzay97.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzay zzay98 = new zzay();
        zzay98.zza(100);
        zzaT = builder97.withProperty(zzay98.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzay zzay99 = new zzay();
        zzay99.zza(101);
        zzaU = builder98.withProperty(zzay99.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzay zzay100 = new zzay();
        zzay100.zza(102);
        zzaV = builder99.withProperty(zzay100.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzay zzay101 = new zzay();
        zzay101.zza(103);
        zzaW = builder100.withProperty(zzay101.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzay zzay102 = new zzay();
        zzay102.zza(LocationRequestCompat.QUALITY_LOW_POWER);
        zzaX = builder101.withProperty(zzay102.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzay zzay103 = new zzay();
        zzay103.zza(105);
        zzaY = builder102.withProperty(zzay103.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzay zzay104 = new zzay();
        zzay104.zza(106);
        zzaZ = builder103.withProperty(zzay104.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzay zzay105 = new zzay();
        zzay105.zza(107);
        zzba = builder104.withProperty(zzay105.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzay zzay106 = new zzay();
        zzay106.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR);
        zzbb = builder105.withProperty(zzay106.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzay zzay107 = new zzay();
        zzay107.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY);
        zzbc = builder106.withProperty(zzay107.zzb()).build();
        FieldDescriptor.Builder builder107 = FieldDescriptor.builder("onDeviceStainRemovalLogEvent");
        zzay zzay108 = new zzay();
        zzay108.zza(110);
        zzbd = builder107.withProperty(zzay108.zzb()).build();
        FieldDescriptor.Builder builder108 = FieldDescriptor.builder("aggregatedOnDeviceStainRemovalLogEvent");
        zzay zzay109 = new zzay();
        zzay109.zza(111);
        zzbe = builder108.withProperty(zzay109.zzb()).build();
        FieldDescriptor.Builder builder109 = FieldDescriptor.builder("stainRemovalOptionalModuleLogEvent");
        zzay zzay110 = new zzay();
        zzay110.zza(112);
        zzbf = builder109.withProperty(zzay110.zzb()).build();
        FieldDescriptor.Builder builder110 = FieldDescriptor.builder("onDeviceShadowRemovalLogEvent");
        zzay zzay111 = new zzay();
        zzay111.zza(113);
        zzbg = builder110.withProperty(zzay111.zzb()).build();
        FieldDescriptor.Builder builder111 = FieldDescriptor.builder("aggregatedOnDeviceShadowRemovalLogEvent");
        zzay zzay112 = new zzay();
        zzay112.zza(114);
        zzbh = builder111.withProperty(zzay112.zzb()).build();
        FieldDescriptor.Builder builder112 = FieldDescriptor.builder("shadowRemovalOptionalModuleLogEvent");
        zzay zzay113 = new zzay();
        zzay113.zza(115);
        zzbi = builder112.withProperty(zzay113.zzb()).build();
        FieldDescriptor.Builder builder113 = FieldDescriptor.builder("onDeviceDigitalInkSegmentationLogEvent");
        zzay zzay114 = new zzay();
        zzay114.zza(AppInfoTableDecoder.APPLICATION_INFORMATION_TABLE_ID);
        zzbj = builder113.withProperty(zzay114.zzb()).build();
        FieldDescriptor.Builder builder114 = FieldDescriptor.builder("onDeviceDocumentScannerStartLogEvent");
        zzay zzay115 = new zzay();
        zzay115.zza(117);
        zzbk = builder114.withProperty(zzay115.zzb()).build();
        FieldDescriptor.Builder builder115 = FieldDescriptor.builder("onDeviceDocumentScannerFinishLogEvent");
        zzay zzay116 = new zzay();
        zzay116.zza(118);
        zzbl = builder115.withProperty(zzay116.zzb()).build();
        FieldDescriptor.Builder builder116 = FieldDescriptor.builder("onDeviceDocumentScannerUiStartLogEvent");
        zzay zzay117 = new zzay();
        zzay117.zza(119);
        zzbm = builder116.withProperty(zzay117.zzb()).build();
        FieldDescriptor.Builder builder117 = FieldDescriptor.builder("onDeviceDocumentScannerUiFinishLogEvent");
        zzay zzay118 = new zzay();
        zzay118.zza(120);
        zzbn = builder117.withProperty(zzay118.zzb()).build();
        FieldDescriptor.Builder builder118 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionStartLogEvent");
        zzay zzay119 = new zzay();
        zzay119.zza(121);
        zzbo = builder118.withProperty(zzay119.zzb()).build();
        FieldDescriptor.Builder builder119 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionFinishLogEvent");
        zzay zzay120 = new zzay();
        zzay120.zza(122);
        zzbp = builder119.withProperty(zzay120.zzb()).build();
        FieldDescriptor.Builder builder120 = FieldDescriptor.builder("onDeviceDocumentScannerUiCreateLogEvent");
        zzay zzay121 = new zzay();
        zzay121.zza(123);
        zzbq = builder120.withProperty(zzay121.zzb()).build();
        FieldDescriptor.Builder builder121 = FieldDescriptor.builder("onDeviceSubjectSegmentationCreateLogEvent");
        zzay zzay122 = new zzay();
        zzay122.zza(124);
        zzbr = builder121.withProperty(zzay122.zzb()).build();
        FieldDescriptor.Builder builder122 = FieldDescriptor.builder("onDeviceSubjectSegmentationLoadLogEvent");
        zzay zzay123 = new zzay();
        zzay123.zza(125);
        zzbs = builder122.withProperty(zzay123.zzb()).build();
        FieldDescriptor.Builder builder123 = FieldDescriptor.builder("onDeviceSubjectSegmentationInferenceLogEvent");
        zzay zzay124 = new zzay();
        zzay124.zza(WebSocketProtocol.PAYLOAD_SHORT);
        zzbt = builder123.withProperty(zzay124.zzb()).build();
        FieldDescriptor.Builder builder124 = FieldDescriptor.builder("aggregatedOnDeviceSubjectSegmentationLogEvent");
        zzay zzay125 = new zzay();
        zzay125.zza(127);
        zzbu = builder124.withProperty(zzay125.zzb()).build();
        FieldDescriptor.Builder builder125 = FieldDescriptor.builder("subjectSegmentationOptionalModuleLogEvent");
        zzay zzay126 = new zzay();
        zzay126.zza(128);
        zzbv = builder125.withProperty(zzay126.zzb()).build();
        FieldDescriptor.Builder builder126 = FieldDescriptor.builder("documentScannerUiModuleScreenViewEvent");
        zzay zzay127 = new zzay();
        zzay127.zza(TsExtractor.TS_STREAM_TYPE_AC3);
        zzbw = builder126.withProperty(zzay127.zzb()).build();
        FieldDescriptor.Builder builder127 = FieldDescriptor.builder("documentScannerUiModuleScreenClickEvent");
        zzay zzay128 = new zzay();
        zzay128.zza(TsExtractor.TS_STREAM_TYPE_HDMV_DTS);
        zzbx = builder127.withProperty(zzay128.zzb()).build();
        FieldDescriptor.Builder builder128 = FieldDescriptor.builder("documentScannerUiModuleScreenErrorEvent");
        zzay zzay129 = new zzay();
        zzay129.zza(131);
        zzby = builder128.withProperty(zzay129.zzb()).build();
    }

    private zzgp() {
    }

    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzmy zzmy = (zzmy) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, (Object) zzmy.zzf());
        objectEncoderContext.add(zzc, (Object) zzmy.zzd());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) null);
        objectEncoderContext.add(zzf, (Object) zzmy.zze());
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, (Object) zzmy.zzb());
        objectEncoderContext.add(zzO, (Object) zzmy.zza());
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) zzmy.zzc());
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
        objectEncoderContext.add(zzaz, (Object) null);
        objectEncoderContext.add(zzaA, (Object) null);
        objectEncoderContext.add(zzaB, (Object) null);
        objectEncoderContext.add(zzaC, (Object) null);
        objectEncoderContext.add(zzaD, (Object) null);
        objectEncoderContext.add(zzaE, (Object) null);
        objectEncoderContext.add(zzaF, (Object) null);
        objectEncoderContext.add(zzaG, (Object) null);
        objectEncoderContext.add(zzaH, (Object) null);
        objectEncoderContext.add(zzaI, (Object) null);
        objectEncoderContext.add(zzaJ, (Object) null);
        objectEncoderContext.add(zzaK, (Object) null);
        objectEncoderContext.add(zzaL, (Object) null);
        objectEncoderContext.add(zzaM, (Object) null);
        objectEncoderContext.add(zzaN, (Object) null);
        objectEncoderContext.add(zzaO, (Object) null);
        objectEncoderContext.add(zzaP, (Object) null);
        objectEncoderContext.add(zzaQ, (Object) null);
        objectEncoderContext.add(zzaR, (Object) null);
        objectEncoderContext.add(zzaS, (Object) null);
        objectEncoderContext.add(zzaT, (Object) null);
        objectEncoderContext.add(zzaU, (Object) null);
        objectEncoderContext.add(zzaV, (Object) null);
        objectEncoderContext.add(zzaW, (Object) null);
        objectEncoderContext.add(zzaX, (Object) null);
        objectEncoderContext.add(zzaY, (Object) null);
        objectEncoderContext.add(zzaZ, (Object) null);
        objectEncoderContext.add(zzba, (Object) null);
        objectEncoderContext.add(zzbb, (Object) null);
        objectEncoderContext.add(zzbc, (Object) null);
        objectEncoderContext.add(zzbd, (Object) null);
        objectEncoderContext.add(zzbe, (Object) null);
        objectEncoderContext.add(zzbf, (Object) null);
        objectEncoderContext.add(zzbg, (Object) null);
        objectEncoderContext.add(zzbh, (Object) null);
        objectEncoderContext.add(zzbi, (Object) null);
        objectEncoderContext.add(zzbj, (Object) null);
        objectEncoderContext.add(zzbk, (Object) null);
        objectEncoderContext.add(zzbl, (Object) null);
        objectEncoderContext.add(zzbm, (Object) null);
        objectEncoderContext.add(zzbn, (Object) null);
        objectEncoderContext.add(zzbo, (Object) null);
        objectEncoderContext.add(zzbp, (Object) null);
        objectEncoderContext.add(zzbq, (Object) null);
        objectEncoderContext.add(zzbr, (Object) null);
        objectEncoderContext.add(zzbs, (Object) null);
        objectEncoderContext.add(zzbt, (Object) null);
        objectEncoderContext.add(zzbu, (Object) null);
        objectEncoderContext.add(zzbv, (Object) null);
        objectEncoderContext.add(zzbw, (Object) null);
        objectEncoderContext.add(zzbx, (Object) null);
        objectEncoderContext.add(zzby, (Object) null);
    }
}
